<Metro:MetroWindow x:Class="AnyDraw.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AnyDraw"
        xmlns:ad="https://github.com/Dirkster99/AvalonDock"  
        xmlns:vm="clr-namespace:AnyDraw"
        xmlns:Metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:Fluent="urn:fluent-ribbon"
        xmlns:anycad="clr-namespace:AnyCAD.WPF;assembly=AnyCAD.WPF.NET6"
        xmlns:au="clr-namespace:AnyCAD.NX.Controls;assembly=AnyCAD.NX.Controls"
        xmlns:av="clr-namespace:AnyCAD.NX.View;assembly=AnyCAD.NX.View"
        xmlns:ax="clr-namespace:AnyCAD.UX;assembly=AnyCAD.UX"
        mc:Ignorable="d"        
        Title="AnyCAD Drawing 2024"  ResizeMode="CanResizeWithGrip"
        Width="1024"
        Height="768"
        GlowBrush="{DynamicResource MahApps.Brushes.Accent}"
                   d:DataContext="{d:DesignInstance Type=vm:MainViewModelImpl}"
        ShowIconOnTitleBar="False"
        ShowSystemMenuOnRightClick="False"
        ShowTitleBar="True"
        TitleCharacterCasing="Normal"
        WindowStartupLocation="CenterScreen"
        WindowState="Normal"
        WindowTransitionsEnabled="False" StateChanged="MetroWindow_StateChanged">


    <Metro:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="{x:Type Fluent:BackstageTabControl}"
                   TargetType="{x:Type Fluent:BackstageTabControl}"
                   BasedOn="{StaticResource {x:Type Fluent:BackstageTabControl}}">
                <Setter Property="SelectedContentMargin" Value="0" />
            </Style>
        </ResourceDictionary>
    </Metro:MetroWindow.Resources>

    <Metro:MetroWindow.TitleTemplate>
        <DataTemplate>
            <Fluent:RibbonTitleBar x:Name="RibbonTitleBar"
                                   Header="{Binding Path=Title, RelativeSource={RelativeSource AncestorType=Window}}"
                                  />
        </DataTemplate>
    </Metro:MetroWindow.TitleTemplate>

    <Metro:MetroWindow.LeftWindowCommands>
        <Metro:WindowCommands>
            <Image Height="24" Source="logo.png" Margin="7,0,7,0"></Image>
        </Metro:WindowCommands>
    </Metro:MetroWindow.LeftWindowCommands>

    <Metro:MetroWindow.RightWindowCommands>
        <Metro:WindowCommands>
            <Button Click="HelpWebsite">登录</Button>
            <Button Content="设置" Command="{Binding ViewSettingCommand}"/>
        </Metro:WindowCommands>
    </Metro:MetroWindow.RightWindowCommands>

    <Metro:MetroWindow.InputBindings>
        <KeyBinding Key="F8" Command="{Binding ExecuteSystemCommand}" CommandParameter="FitStdView"/>
        <KeyBinding Key="F10" Command="{Binding ShowGridCommand}" />

        <KeyBinding
            Key="S"
            Command="{Binding SaveCommand}"
            Modifiers="Control" />
        <KeyBinding
            Key="Z"
            Command="{Binding UndoCommand}"
            Modifiers="Control" />
        <KeyBinding
            Key="Y"
            Command="{Binding RedoCommand}"
            Modifiers="Control" />
    </Metro:MetroWindow.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Fluent:Ribbon x:Name="mRibbon" Grid.Row="0" SelectedTabIndex="{Binding SelectedRibbonTabIndex, Mode=TwoWay}">
            <!--Backstage-->
            <!--<Fluent:Ribbon.Menu>
                <Fluent:Backstage>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>-->

            <Fluent:Ribbon.QuickAccessItems>
                <Fluent:QuickAccessMenuItem IsChecked="true">
                    <Fluent:Button
                        Command="{Binding NewCommand}"
                        Header="新建"
                        Icon="{Binding Source={x:Static ax:Icons.New}}"
                        IsEnabled="{Binding ElementName=mRibbon, Path=IsEnabled}" />
                </Fluent:QuickAccessMenuItem>
                <Fluent:QuickAccessMenuItem IsChecked="true">
                    <Fluent:Button
                        Command="{Binding OpenCommand}"
                        Header="打开"
                        Icon="{Binding Source={x:Static ax:Icons.Open}}"
                        IsEnabled="{Binding ElementName=mRibbon, Path=IsEnabled}" />
                </Fluent:QuickAccessMenuItem>
                <Fluent:QuickAccessMenuItem IsChecked="true">
                    <Fluent:Button
                        Command="{Binding ImportCommand}"
                        Header="导入"
                        Icon="{Binding Source={x:Static ax:Icons.Import}}"
                        IsEnabled="{Binding ElementName=mRibbon, Path=IsEnabled}" />
                </Fluent:QuickAccessMenuItem>
                <Fluent:QuickAccessMenuItem IsChecked="true">
                    <Fluent:Button
                        Command="{Binding SaveCommand}"
                        Header="保存"
                        Icon="{Binding Source={x:Static ax:Icons.Save}}"
                        IsEnabled="{Binding ElementName=mRibbon, Path=IsEnabled}" />
                </Fluent:QuickAccessMenuItem>
                <Fluent:QuickAccessMenuItem IsChecked="true">
                    <Fluent:Button
                        Command="{Binding ExportCommand}"
                        Header="保存"
                        Icon="{Binding Source={x:Static ax:Icons.Export}}"
                        IsEnabled="{Binding ElementName=mRibbon, Path=IsEnabled}" />
                </Fluent:QuickAccessMenuItem>
                <Fluent:QuickAccessMenuItem>
                    <Fluent:Button
                        Command="{Binding SaveAsCommand}"
                        Header="另存为"
                        Icon="{Binding Source={x:Static ax:Icons.SaveAs}}"
                        IsEnabled="{Binding ElementName=mRibbon, Path=IsEnabled}" />
                </Fluent:QuickAccessMenuItem>

                <Fluent:QuickAccessMenuItem IsChecked="true">
                    <Fluent:Button
                        Command="{Binding UndoCommand}"
                        Header="Undo"
                        Icon="{Binding Source={x:Static ax:Icons.Undo}}"
                        IsEnabled="{Binding ElementName=mRibbon, Path=IsEnabled}" />
                </Fluent:QuickAccessMenuItem>
                <Fluent:QuickAccessMenuItem IsChecked="true">
                    <Fluent:Button
                        Command="{Binding RedoCommand}"
                        Header="Redo"
                        Icon="{Binding Source={x:Static ax:Icons.Redo}}"
                        IsEnabled="{Binding ElementName=mRibbon, Path=IsEnabled}" />
                </Fluent:QuickAccessMenuItem>
            </Fluent:Ribbon.QuickAccessItems>
            
            <Fluent:RibbonTabItem Header="首页">
                <Fluent:RibbonGroupBox Header="文件" Margin="7,0,0,0" >
                    <Fluent:Button Header="DXF"  Command="{Binding ExecuteSystemCommand}" 
                                               CommandParameter="ImportDXF"
                                   Icon="{Binding Source={x:Static ax:Icons.Point}}" Margin="0,0,7,0"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="绘制" Margin="7,0,0,0" >
                    <Fluent:Button Header="点"  Command="{Binding ExecuteSystemCommand}" 
                                               CommandParameter="Point"
                                   Icon="{Binding Source={x:Static ax:Icons.Point}}" Margin="0,0,7,0"/>
                    <Fluent:Button Header="直线"  Command="{Binding ExecuteSystemCommand}" 
                                           CommandParameter="Line"
                                           Icon="{Binding Source={x:Static ax:Icons.SketchLine}}" Margin="0,0,7,0"/>
                    <Fluent:Button Header="多折线"  Command="{Binding ExecuteSystemCommand}" 
                                           CommandParameter="Polyline"
                                           Icon="{Binding Source={x:Static ax:Icons.SketchLine}}" Margin="0,0,7,0"/>
                     <Fluent:Button Header="矩形"  Command="{Binding ExecuteSystemCommand}" 
                                           CommandParameter="Rectangle"
                                           Icon="{Binding Source={x:Static ax:Icons.SketchRectangle}}" Margin="0,0,7,0"/>                   
                    <Fluent:Button Header="圆弧"  Command="{Binding ExecuteSystemCommand}" CommandParameter="Arc"
                                               Icon="{Binding Source={x:Static ax:Icons.SketchArc}}" Margin="0,0,7,0">
                        <!--<Fluent:MenuItem Header="三点圆弧"  Command="{Binding ExecuteSystemCommand}" 
                                               CommandParameter="Arc"
                                               Icon="{Binding Source={x:Static ax:Icons.SketchArcBy3Pts}}" />-->
                    </Fluent:Button>
                    <!--<Fluent:Button Header="圆弧"  Command="{Binding ExecuteSystemCommand}" 
                                           CommandParameter="Arc"
                                           Icon="{Binding Source={x:Static ax:Icons.SketchArcBy3Pts}}" Margin="0,0,7,0"/>-->
                    <Fluent:Button Header="圆"   Command="{Binding ExecuteSystemCommand}" 
                                               CommandParameter="Circle"
                                           Icon="{Binding Source={x:Static ax:Icons.SketchCircle}}" Margin="0,0,7,0">
                    </Fluent:Button>

                    <!--<Fluent:Button Header="椭圆"  Command="{Binding ExecuteSystemCommand}" 
                                               CommandParameter="Ellipse"
                                               Icon="/OpenCAX.Icons;component/Images/ellipse_wcenter.2l.png" Margin="0,0,7,0"/>
                    <Fluent:Button Header="Bezier"  Command="{Binding ExecuteSystemCommand}" 
                                               CommandParameter="Bezier"
                                               Icon="/OpenCAX.Icons;component/Images/spline.2l.png" Margin="0,0,7,0"/>                       
                    <Fluent:Button Header="B样条"  Command="{Binding ExecuteSystemCommand}" 
                                               CommandParameter="Spline"
                                               Icon="/OpenCAX.Icons;component/Images/spline.2l.png" Margin="0,0,7,0"/>-->          
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="修改" Margin="7,0,0,0" >
                    <Fluent:Button Header="修改"  Command="{Binding ExecuteSystemCommand}" 
                                               CommandParameter="ModifyObject"
                                               Icon="{Binding Source={x:Static ax:Icons.SketchExtend}}" Margin="0,0,7,0"/>
                    <Fluent:Button Header="删除"  Command="{Binding ExecuteSystemCommand}" 
                                               CommandParameter="MultiDelete"
                                               Icon="{Binding Source={x:Static ax:Icons.SketchTrim}}" Margin="0,0,7,0"/>
                </Fluent:RibbonGroupBox>
                <!--<Fluent:RibbonGroupBox Header="标注" Margin="7,0,0,0" >
                    <Fluent:Button Header="尺寸"  Command="{Binding ExecuteSystemCommand}" 
                                               CommandParameter="LinearAnnotation"
                                               Icon="/OpenCAX.Icons;component/Images/lineardim.png" Margin="0,0,7,0"/>
                    <Fluent:Button Header="半径"  Command="{Binding ExecuteSystemCommand}" 
                                               CommandParameter="RadiusAnnotation"
                                               Icon="/OpenCAX.Icons;component/Images/radnottocent_dim.2l.png" Margin="0,0,7,0"/>
                    <Fluent:Button Header="标签"  Command="{Binding ExecuteSystemCommand}" 
                                               CommandParameter="TagAnnotation"
                                               Icon="/OpenCAX.Icons;component/Images/dim_text_above_stub.2l.png" Margin="0,0,7,0"/>
                </Fluent:RibbonGroupBox>-->
                <Fluent:RibbonGroupBox Header="视图" Margin="7,0,0,0">
                    <Fluent:Button Header="适应窗口" Command="{Binding ZoomFitCommand}" Icon="{Binding Source={x:Static ax:Icons.ZoomToWindow}}" Margin="0,0,7,0"/>
                    <Fluent:Button Header="放大" Command="{Binding ExecuteSystemCommand}" 
                                   CommandParameter="RectZoom"
                                   Icon="{Binding Source={x:Static ax:Icons.ZoomToWindow}}" Margin="0,0,7,0"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="管理" Margin="7,0,0,0">
                    <Fluent:Button Header="材质"  Command="{Binding MaterialManagementCommand}" 
                                               Icon="{Binding Source={x:Static ax:Icons.Material}}" Margin="0,0,7,0"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Header="套料">
                <Fluent:RibbonGroupBox Header="布局" Margin="7,0,0,0" >
                    <Fluent:Button Header="布局"  Command="{Binding NestCommand}" 
                                   Icon="{Binding Source={x:Static ax:Icons.Group}}" Margin="0,0,7,0"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>
        <!--工作窗口-->
        <ad:DockingManager x:Name="dockingManager" Grid.Row="1">
            <ad:DockingManager.Theme>
                <ad:Vs2013DarkTheme/>
            </ad:DockingManager.Theme>
            <ad:LayoutRoot>
                <ad:LayoutPanel Orientation="Horizontal">
                    <ad:LayoutAnchorablePaneGroup DockMinWidth="240" FloatingWidth="240" Orientation="Vertical">
                        
                        <ad:LayoutAnchorablePane DockWidth="200">
                            <ad:LayoutAnchorable Title="图层" CanClose="False" CanFloat="True" CanHide="False" >
                                <!--<av:LayerListView x:Name="mLayerBrower"/>-->
                                <ListView x:Name="mLayerBrower">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <WrapPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <CheckBox IsChecked="{Binding IsVisible}"></CheckBox>
                                                    <Ellipse x:Name="BrushResource" Width="16" Height="16" Fill="{Binding ColorBrush}"/>
                                                    <TextBlock Text="{Binding Name}" Margin="7,2,0,0"/>
                                                </StackPanel>
                                            </WrapPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </ad:LayoutAnchorable>
                        </ad:LayoutAnchorablePane>
                        
                        <ad:LayoutAnchorablePane DockWidth="200">
                            <ad:LayoutAnchorable Title="属性"  CanClose="False" CanFloat="True" CanHide="False" >
                                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                    <av:AuPropertyView/>
                                </ScrollViewer>
                            </ad:LayoutAnchorable>
                        </ad:LayoutAnchorablePane>
                    </ad:LayoutAnchorablePaneGroup>

                    <ad:LayoutPanel Orientation="Vertical">
                        <ad:LayoutDocumentPane IsMaximized="True" DockHeight="*" DockWidth="*">
                            <ad:LayoutDocument Title="绘图" CanClose="False">
                                <anycad:RenderControl Name="mView3d" ViewerReady="MView3d_ViewerReady"/>
                            </ad:LayoutDocument>
                        </ad:LayoutDocumentPane>

                        <!--<ad:LayoutAnchorablePaneGroup DockHeight="100" FloatingHeight="100" Orientation="Horizontal">
                            <ad:LayoutAnchorablePane DockHeight="100">
                                <ad:LayoutAnchorable Title="输出" IsMaximized="True" IsVisible="False">
                                    <ListBox x:Name="mOutputBox"/>
                                </ad:LayoutAnchorable>
                            </ad:LayoutAnchorablePane>
                        </ad:LayoutAnchorablePaneGroup>-->
                    </ad:LayoutPanel>
                </ad:LayoutPanel>
            </ad:LayoutRoot>
        </ad:DockingManager>
        <StatusBar Grid.Row="3">
            <StatusBarItem Content="{Binding StatusMessage}"/>
            <Separator  />
            <StatusBarItem Content="{Binding PositionMessage}"></StatusBarItem>
        </StatusBar>
    </Grid>
</Metro:MetroWindow>
